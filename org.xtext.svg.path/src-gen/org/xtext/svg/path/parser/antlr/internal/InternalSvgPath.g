/*
 * generated by Xtext 2.12.0
 */
grammar InternalSvgPath;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.svg.path.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.svg.path.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.svg.path.services.SvgPathGrammarAccess;

}

@parser::members {

 	private SvgPathGrammarAccess grammarAccess;

    public InternalSvgPathParser(TokenStream input, SvgPathGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Path";
   	}

   	@Override
   	protected SvgPathGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePath
entryRulePath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current; }
	EOF;

// Rule Path
rulePath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPathAccess().getPathPathValueParserRuleCall_0_0());
				}
				lv_path_0_0=rulePathValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPathRule());
					}
					add(
						$current,
						"path",
						lv_path_0_0,
						"org.xtext.svg.path.SvgPath.PathValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPathAccess().getPathPathValueParserRuleCall_1_0());
				}
				lv_path_1_0=rulePathValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPathRule());
					}
					add(
						$current,
						"path",
						lv_path_1_0,
						"org.xtext.svg.path.SvgPath.PathValue");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePathValue
entryRulePathValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathValueRule()); }
	iv_rulePathValue=rulePathValue
	{ $current=$iv_rulePathValue.current; }
	EOF;

// Rule PathValue
rulePathValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getAbsoluteMoveToParserRuleCall_0());
		}
		this_AbsoluteMoveTo_0=ruleAbsoluteMoveTo
		{
			$current = $this_AbsoluteMoveTo_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getRelativeMoveToParserRuleCall_1());
		}
		this_RelativeMoveTo_1=ruleRelativeMoveTo
		{
			$current = $this_RelativeMoveTo_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getAbsoluteLineToParserRuleCall_2());
		}
		this_AbsoluteLineTo_2=ruleAbsoluteLineTo
		{
			$current = $this_AbsoluteLineTo_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getRelativeLineToParserRuleCall_3());
		}
		this_RelativeLineTo_3=ruleRelativeLineTo
		{
			$current = $this_RelativeLineTo_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getAbsoluteHorizontalLineToParserRuleCall_4());
		}
		this_AbsoluteHorizontalLineTo_4=ruleAbsoluteHorizontalLineTo
		{
			$current = $this_AbsoluteHorizontalLineTo_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getRelativeHorizontalLineToParserRuleCall_5());
		}
		this_RelativeHorizontalLineTo_5=ruleRelativeHorizontalLineTo
		{
			$current = $this_RelativeHorizontalLineTo_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getAbsoluteVerticalLineToParserRuleCall_6());
		}
		this_AbsoluteVerticalLineTo_6=ruleAbsoluteVerticalLineTo
		{
			$current = $this_AbsoluteVerticalLineTo_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getRelativeVerticalLineToParserRuleCall_7());
		}
		this_RelativeVerticalLineTo_7=ruleRelativeVerticalLineTo
		{
			$current = $this_RelativeVerticalLineTo_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getAbsoluteQuadraticCurveToParserRuleCall_8());
		}
		this_AbsoluteQuadraticCurveTo_8=ruleAbsoluteQuadraticCurveTo
		{
			$current = $this_AbsoluteQuadraticCurveTo_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getRelativeQuadraticCurveToParserRuleCall_9());
		}
		this_RelativeQuadraticCurveTo_9=ruleRelativeQuadraticCurveTo
		{
			$current = $this_RelativeQuadraticCurveTo_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getAbsoluteCubicCurveToParserRuleCall_10());
		}
		this_AbsoluteCubicCurveTo_10=ruleAbsoluteCubicCurveTo
		{
			$current = $this_AbsoluteCubicCurveTo_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getRelativeCubicCurveToParserRuleCall_11());
		}
		this_RelativeCubicCurveTo_11=ruleRelativeCubicCurveTo
		{
			$current = $this_RelativeCubicCurveTo_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getAbsoluteSmoothQuadraticCurveToParserRuleCall_12());
		}
		this_AbsoluteSmoothQuadraticCurveTo_12=ruleAbsoluteSmoothQuadraticCurveTo
		{
			$current = $this_AbsoluteSmoothQuadraticCurveTo_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getRelativeSmoothQuadraticCurveToParserRuleCall_13());
		}
		this_RelativeSmoothQuadraticCurveTo_13=ruleRelativeSmoothQuadraticCurveTo
		{
			$current = $this_RelativeSmoothQuadraticCurveTo_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getAbsoluteSmoothCubicCurveToParserRuleCall_14());
		}
		this_AbsoluteSmoothCubicCurveTo_14=ruleAbsoluteSmoothCubicCurveTo
		{
			$current = $this_AbsoluteSmoothCubicCurveTo_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getRelativeSmoothCubicCurveToParserRuleCall_15());
		}
		this_RelativeSmoothCubicCurveTo_15=ruleRelativeSmoothCubicCurveTo
		{
			$current = $this_RelativeSmoothCubicCurveTo_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPathValueAccess().getClosePathParserRuleCall_16());
		}
		this_ClosePath_16=ruleClosePath
		{
			$current = $this_ClosePath_16.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current.getText(); }
	EOF;

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNumberAccess().getIntegerParserRuleCall_0_0());
			}
			this_Integer_0=ruleInteger
			{
				$current.merge(this_Integer_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					kw='E'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getNumberAccess().getEKeyword_0_1_0_0());
					}
					    |
					kw='e'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getNumberAccess().getEKeyword_0_1_0_1());
					}
				)
				{
					newCompositeNode(grammarAccess.getNumberAccess().getIntegerParserRuleCall_0_1_1());
				}
				this_Integer_3=ruleInteger
				{
					$current.merge(this_Integer_3);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
		)
		    |
		(
			(
				kw='+'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNumberAccess().getPlusSignKeyword_1_0_0());
				}
				    |
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNumberAccess().getHyphenMinusKeyword_1_0_1());
				}
			)?
			(
				this_INT_6=RULE_INT
				{
					$current.merge(this_INT_6);
				}
				{
					newLeafNode(this_INT_6, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1());
				}
			)?
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_2());
			}
			this_INT_8=RULE_INT
			{
				$current.merge(this_INT_8);
			}
			{
				newLeafNode(this_INT_8, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_3());
			}
			(
				(
					kw='E'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getNumberAccess().getEKeyword_1_4_0_0());
					}
					    |
					kw='e'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getNumberAccess().getEKeyword_1_4_0_1());
					}
				)
				{
					newCompositeNode(grammarAccess.getNumberAccess().getIntegerParserRuleCall_1_4_1());
				}
				this_Integer_11=ruleInteger
				{
					$current.merge(this_Integer_11);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
		)
	)
;

// Entry rule entryRuleInteger
entryRuleInteger returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntegerRule()); }
	iv_ruleInteger=ruleInteger
	{ $current=$iv_ruleInteger.current.getText(); }
	EOF;

// Rule Integer
ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='+'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIntegerAccess().getPlusSignKeyword_0_0());
			}
			    |
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0_1());
			}
		)?
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAbsoluteMoveTo
entryRuleAbsoluteMoveTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsoluteMoveToRule()); }
	iv_ruleAbsoluteMoveTo=ruleAbsoluteMoveTo
	{ $current=$iv_ruleAbsoluteMoveTo.current; }
	EOF;

// Rule AbsoluteMoveTo
ruleAbsoluteMoveTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='M'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsoluteMoveToAccess().getMKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteMoveToAccess().getXNumberParserRuleCall_1_0());
				}
				lv_x_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteMoveToRule());
					}
					set(
						$current,
						"x",
						lv_x_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getAbsoluteMoveToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteMoveToAccess().getYNumberParserRuleCall_3_0());
				}
				lv_y_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteMoveToRule());
					}
					set(
						$current,
						"y",
						lv_y_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelativeMoveTo
entryRuleRelativeMoveTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelativeMoveToRule()); }
	iv_ruleRelativeMoveTo=ruleRelativeMoveTo
	{ $current=$iv_ruleRelativeMoveTo.current; }
	EOF;

// Rule RelativeMoveTo
ruleRelativeMoveTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='m'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelativeMoveToAccess().getMKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeMoveToAccess().getDxNumberParserRuleCall_1_0());
				}
				lv_dx_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeMoveToRule());
					}
					set(
						$current,
						"dx",
						lv_dx_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getRelativeMoveToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeMoveToAccess().getDyNumberParserRuleCall_3_0());
				}
				lv_dy_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeMoveToRule());
					}
					set(
						$current,
						"dy",
						lv_dy_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAbsoluteLineTo
entryRuleAbsoluteLineTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsoluteLineToRule()); }
	iv_ruleAbsoluteLineTo=ruleAbsoluteLineTo
	{ $current=$iv_ruleAbsoluteLineTo.current; }
	EOF;

// Rule AbsoluteLineTo
ruleAbsoluteLineTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='L'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsoluteLineToAccess().getLKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteLineToAccess().getXNumberParserRuleCall_1_0());
				}
				lv_x_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteLineToRule());
					}
					set(
						$current,
						"x",
						lv_x_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getAbsoluteLineToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteLineToAccess().getYNumberParserRuleCall_3_0());
				}
				lv_y_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteLineToRule());
					}
					set(
						$current,
						"y",
						lv_y_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelativeLineTo
entryRuleRelativeLineTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelativeLineToRule()); }
	iv_ruleRelativeLineTo=ruleRelativeLineTo
	{ $current=$iv_ruleRelativeLineTo.current; }
	EOF;

// Rule RelativeLineTo
ruleRelativeLineTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='l'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelativeLineToAccess().getLKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeLineToAccess().getDxNumberParserRuleCall_1_0());
				}
				lv_dx_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeLineToRule());
					}
					set(
						$current,
						"dx",
						lv_dx_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getRelativeLineToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeLineToAccess().getDyNumberParserRuleCall_3_0());
				}
				lv_dy_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeLineToRule());
					}
					set(
						$current,
						"dy",
						lv_dy_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAbsoluteHorizontalLineTo
entryRuleAbsoluteHorizontalLineTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsoluteHorizontalLineToRule()); }
	iv_ruleAbsoluteHorizontalLineTo=ruleAbsoluteHorizontalLineTo
	{ $current=$iv_ruleAbsoluteHorizontalLineTo.current; }
	EOF;

// Rule AbsoluteHorizontalLineTo
ruleAbsoluteHorizontalLineTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='H'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsoluteHorizontalLineToAccess().getHKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteHorizontalLineToAccess().getXNumberParserRuleCall_1_0());
				}
				lv_x_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteHorizontalLineToRule());
					}
					set(
						$current,
						"x",
						lv_x_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelativeHorizontalLineTo
entryRuleRelativeHorizontalLineTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelativeHorizontalLineToRule()); }
	iv_ruleRelativeHorizontalLineTo=ruleRelativeHorizontalLineTo
	{ $current=$iv_ruleRelativeHorizontalLineTo.current; }
	EOF;

// Rule RelativeHorizontalLineTo
ruleRelativeHorizontalLineTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='h'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelativeHorizontalLineToAccess().getHKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeHorizontalLineToAccess().getDxNumberParserRuleCall_1_0());
				}
				lv_dx_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeHorizontalLineToRule());
					}
					set(
						$current,
						"dx",
						lv_dx_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAbsoluteVerticalLineTo
entryRuleAbsoluteVerticalLineTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsoluteVerticalLineToRule()); }
	iv_ruleAbsoluteVerticalLineTo=ruleAbsoluteVerticalLineTo
	{ $current=$iv_ruleAbsoluteVerticalLineTo.current; }
	EOF;

// Rule AbsoluteVerticalLineTo
ruleAbsoluteVerticalLineTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='V'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsoluteVerticalLineToAccess().getVKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteVerticalLineToAccess().getYNumberParserRuleCall_1_0());
				}
				lv_y_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteVerticalLineToRule());
					}
					set(
						$current,
						"y",
						lv_y_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelativeVerticalLineTo
entryRuleRelativeVerticalLineTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelativeVerticalLineToRule()); }
	iv_ruleRelativeVerticalLineTo=ruleRelativeVerticalLineTo
	{ $current=$iv_ruleRelativeVerticalLineTo.current; }
	EOF;

// Rule RelativeVerticalLineTo
ruleRelativeVerticalLineTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='v'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelativeVerticalLineToAccess().getVKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeVerticalLineToAccess().getDyNumberParserRuleCall_1_0());
				}
				lv_dy_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeVerticalLineToRule());
					}
					set(
						$current,
						"dy",
						lv_dy_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAbsoluteQuadraticCurveTo
entryRuleAbsoluteQuadraticCurveTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsoluteQuadraticCurveToRule()); }
	iv_ruleAbsoluteQuadraticCurveTo=ruleAbsoluteQuadraticCurveTo
	{ $current=$iv_ruleAbsoluteQuadraticCurveTo.current; }
	EOF;

// Rule AbsoluteQuadraticCurveTo
ruleAbsoluteQuadraticCurveTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Q'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsoluteQuadraticCurveToAccess().getQKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteQuadraticCurveToAccess().getCxNumberParserRuleCall_1_0());
				}
				lv_cx_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteQuadraticCurveToRule());
					}
					set(
						$current,
						"cx",
						lv_cx_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getAbsoluteQuadraticCurveToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteQuadraticCurveToAccess().getCyNumberParserRuleCall_3_0());
				}
				lv_cy_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteQuadraticCurveToRule());
					}
					set(
						$current,
						"cy",
						lv_cy_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getAbsoluteQuadraticCurveToAccess().getCommaKeyword_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteQuadraticCurveToAccess().getXNumberParserRuleCall_5_0());
				}
				lv_x_5_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteQuadraticCurveToRule());
					}
					set(
						$current,
						"x",
						lv_x_5_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getAbsoluteQuadraticCurveToAccess().getCommaKeyword_6());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteQuadraticCurveToAccess().getYNumberParserRuleCall_7_0());
				}
				lv_y_7_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteQuadraticCurveToRule());
					}
					set(
						$current,
						"y",
						lv_y_7_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelativeQuadraticCurveTo
entryRuleRelativeQuadraticCurveTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelativeQuadraticCurveToRule()); }
	iv_ruleRelativeQuadraticCurveTo=ruleRelativeQuadraticCurveTo
	{ $current=$iv_ruleRelativeQuadraticCurveTo.current; }
	EOF;

// Rule RelativeQuadraticCurveTo
ruleRelativeQuadraticCurveTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='q'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelativeQuadraticCurveToAccess().getQKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeQuadraticCurveToAccess().getDcxNumberParserRuleCall_1_0());
				}
				lv_dcx_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeQuadraticCurveToRule());
					}
					set(
						$current,
						"dcx",
						lv_dcx_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getRelativeQuadraticCurveToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeQuadraticCurveToAccess().getDcyNumberParserRuleCall_3_0());
				}
				lv_dcy_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeQuadraticCurveToRule());
					}
					set(
						$current,
						"dcy",
						lv_dcy_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getRelativeQuadraticCurveToAccess().getCommaKeyword_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeQuadraticCurveToAccess().getDxNumberParserRuleCall_5_0());
				}
				lv_dx_5_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeQuadraticCurveToRule());
					}
					set(
						$current,
						"dx",
						lv_dx_5_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getRelativeQuadraticCurveToAccess().getCommaKeyword_6());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeQuadraticCurveToAccess().getDyNumberParserRuleCall_7_0());
				}
				lv_dy_7_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeQuadraticCurveToRule());
					}
					set(
						$current,
						"dy",
						lv_dy_7_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAbsoluteCubicCurveTo
entryRuleAbsoluteCubicCurveTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsoluteCubicCurveToRule()); }
	iv_ruleAbsoluteCubicCurveTo=ruleAbsoluteCubicCurveTo
	{ $current=$iv_ruleAbsoluteCubicCurveTo.current; }
	EOF;

// Rule AbsoluteCubicCurveTo
ruleAbsoluteCubicCurveTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='C'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsoluteCubicCurveToAccess().getCKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteCubicCurveToAccess().getC1xNumberParserRuleCall_1_0());
				}
				lv_c1x_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteCubicCurveToRule());
					}
					set(
						$current,
						"c1x",
						lv_c1x_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getAbsoluteCubicCurveToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteCubicCurveToAccess().getC1yNumberParserRuleCall_3_0());
				}
				lv_c1y_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteCubicCurveToRule());
					}
					set(
						$current,
						"c1y",
						lv_c1y_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getAbsoluteCubicCurveToAccess().getCommaKeyword_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteCubicCurveToAccess().getC2xNumberParserRuleCall_5_0());
				}
				lv_c2x_5_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteCubicCurveToRule());
					}
					set(
						$current,
						"c2x",
						lv_c2x_5_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getAbsoluteCubicCurveToAccess().getCommaKeyword_6());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteCubicCurveToAccess().getC2yNumberParserRuleCall_7_0());
				}
				lv_c2y_7_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteCubicCurveToRule());
					}
					set(
						$current,
						"c2y",
						lv_c2y_7_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getAbsoluteCubicCurveToAccess().getCommaKeyword_8());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteCubicCurveToAccess().getXNumberParserRuleCall_9_0());
				}
				lv_x_9_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteCubicCurveToRule());
					}
					set(
						$current,
						"x",
						lv_x_9_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getAbsoluteCubicCurveToAccess().getCommaKeyword_10());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteCubicCurveToAccess().getYNumberParserRuleCall_11_0());
				}
				lv_y_11_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteCubicCurveToRule());
					}
					set(
						$current,
						"y",
						lv_y_11_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelativeCubicCurveTo
entryRuleRelativeCubicCurveTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelativeCubicCurveToRule()); }
	iv_ruleRelativeCubicCurveTo=ruleRelativeCubicCurveTo
	{ $current=$iv_ruleRelativeCubicCurveTo.current; }
	EOF;

// Rule RelativeCubicCurveTo
ruleRelativeCubicCurveTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='c'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelativeCubicCurveToAccess().getCKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeCubicCurveToAccess().getDc1xNumberParserRuleCall_1_0());
				}
				lv_dc1x_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeCubicCurveToRule());
					}
					set(
						$current,
						"dc1x",
						lv_dc1x_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getRelativeCubicCurveToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeCubicCurveToAccess().getDc1yNumberParserRuleCall_3_0());
				}
				lv_dc1y_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeCubicCurveToRule());
					}
					set(
						$current,
						"dc1y",
						lv_dc1y_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getRelativeCubicCurveToAccess().getCommaKeyword_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeCubicCurveToAccess().getDc2xNumberParserRuleCall_5_0());
				}
				lv_dc2x_5_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeCubicCurveToRule());
					}
					set(
						$current,
						"dc2x",
						lv_dc2x_5_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getRelativeCubicCurveToAccess().getCommaKeyword_6());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeCubicCurveToAccess().getDc2yNumberParserRuleCall_7_0());
				}
				lv_dc2y_7_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeCubicCurveToRule());
					}
					set(
						$current,
						"dc2y",
						lv_dc2y_7_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getRelativeCubicCurveToAccess().getCommaKeyword_8());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeCubicCurveToAccess().getDxNumberParserRuleCall_9_0());
				}
				lv_dx_9_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeCubicCurveToRule());
					}
					set(
						$current,
						"dx",
						lv_dx_9_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getRelativeCubicCurveToAccess().getCommaKeyword_10());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeCubicCurveToAccess().getDyNumberParserRuleCall_11_0());
				}
				lv_dy_11_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeCubicCurveToRule());
					}
					set(
						$current,
						"dy",
						lv_dy_11_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAbsoluteSmoothQuadraticCurveTo
entryRuleAbsoluteSmoothQuadraticCurveTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsoluteSmoothQuadraticCurveToRule()); }
	iv_ruleAbsoluteSmoothQuadraticCurveTo=ruleAbsoluteSmoothQuadraticCurveTo
	{ $current=$iv_ruleAbsoluteSmoothQuadraticCurveTo.current; }
	EOF;

// Rule AbsoluteSmoothQuadraticCurveTo
ruleAbsoluteSmoothQuadraticCurveTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='T'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsoluteSmoothQuadraticCurveToAccess().getTKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteSmoothQuadraticCurveToAccess().getXNumberParserRuleCall_1_0());
				}
				lv_x_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteSmoothQuadraticCurveToRule());
					}
					set(
						$current,
						"x",
						lv_x_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getAbsoluteSmoothQuadraticCurveToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteSmoothQuadraticCurveToAccess().getYNumberParserRuleCall_3_0());
				}
				lv_y_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteSmoothQuadraticCurveToRule());
					}
					set(
						$current,
						"y",
						lv_y_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelativeSmoothQuadraticCurveTo
entryRuleRelativeSmoothQuadraticCurveTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelativeSmoothQuadraticCurveToRule()); }
	iv_ruleRelativeSmoothQuadraticCurveTo=ruleRelativeSmoothQuadraticCurveTo
	{ $current=$iv_ruleRelativeSmoothQuadraticCurveTo.current; }
	EOF;

// Rule RelativeSmoothQuadraticCurveTo
ruleRelativeSmoothQuadraticCurveTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='t'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelativeSmoothQuadraticCurveToAccess().getTKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeSmoothQuadraticCurveToAccess().getDxNumberParserRuleCall_1_0());
				}
				lv_dx_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeSmoothQuadraticCurveToRule());
					}
					set(
						$current,
						"dx",
						lv_dx_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getRelativeSmoothQuadraticCurveToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeSmoothQuadraticCurveToAccess().getDyNumberParserRuleCall_3_0());
				}
				lv_dy_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeSmoothQuadraticCurveToRule());
					}
					set(
						$current,
						"dy",
						lv_dy_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAbsoluteSmoothCubicCurveTo
entryRuleAbsoluteSmoothCubicCurveTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsoluteSmoothCubicCurveToRule()); }
	iv_ruleAbsoluteSmoothCubicCurveTo=ruleAbsoluteSmoothCubicCurveTo
	{ $current=$iv_ruleAbsoluteSmoothCubicCurveTo.current; }
	EOF;

// Rule AbsoluteSmoothCubicCurveTo
ruleAbsoluteSmoothCubicCurveTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='S'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsoluteSmoothCubicCurveToAccess().getSKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteSmoothCubicCurveToAccess().getCxNumberParserRuleCall_1_0());
				}
				lv_cx_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteSmoothCubicCurveToRule());
					}
					set(
						$current,
						"cx",
						lv_cx_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getAbsoluteSmoothCubicCurveToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteSmoothCubicCurveToAccess().getCyNumberParserRuleCall_3_0());
				}
				lv_cy_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteSmoothCubicCurveToRule());
					}
					set(
						$current,
						"cy",
						lv_cy_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getAbsoluteSmoothCubicCurveToAccess().getCommaKeyword_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteSmoothCubicCurveToAccess().getXNumberParserRuleCall_5_0());
				}
				lv_x_5_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteSmoothCubicCurveToRule());
					}
					set(
						$current,
						"x",
						lv_x_5_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getAbsoluteSmoothCubicCurveToAccess().getCommaKeyword_6());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsoluteSmoothCubicCurveToAccess().getYNumberParserRuleCall_7_0());
				}
				lv_y_7_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsoluteSmoothCubicCurveToRule());
					}
					set(
						$current,
						"y",
						lv_y_7_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelativeSmoothCubicCurveTo
entryRuleRelativeSmoothCubicCurveTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelativeSmoothCubicCurveToRule()); }
	iv_ruleRelativeSmoothCubicCurveTo=ruleRelativeSmoothCubicCurveTo
	{ $current=$iv_ruleRelativeSmoothCubicCurveTo.current; }
	EOF;

// Rule RelativeSmoothCubicCurveTo
ruleRelativeSmoothCubicCurveTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='s'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelativeSmoothCubicCurveToAccess().getSKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeSmoothCubicCurveToAccess().getDcxNumberParserRuleCall_1_0());
				}
				lv_dcx_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeSmoothCubicCurveToRule());
					}
					set(
						$current,
						"dcx",
						lv_dcx_1_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getRelativeSmoothCubicCurveToAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeSmoothCubicCurveToAccess().getDcyNumberParserRuleCall_3_0());
				}
				lv_dcy_3_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeSmoothCubicCurveToRule());
					}
					set(
						$current,
						"dcy",
						lv_dcy_3_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getRelativeSmoothCubicCurveToAccess().getCommaKeyword_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeSmoothCubicCurveToAccess().getDxNumberParserRuleCall_5_0());
				}
				lv_dx_5_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeSmoothCubicCurveToRule());
					}
					set(
						$current,
						"dx",
						lv_dx_5_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getRelativeSmoothCubicCurveToAccess().getCommaKeyword_6());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRelativeSmoothCubicCurveToAccess().getDyNumberParserRuleCall_7_0());
				}
				lv_dy_7_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelativeSmoothCubicCurveToRule());
					}
					set(
						$current,
						"dy",
						lv_dy_7_0,
						"org.xtext.svg.path.SvgPath.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClosePath
entryRuleClosePath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClosePathRule()); }
	iv_ruleClosePath=ruleClosePath
	{ $current=$iv_ruleClosePath.current; }
	EOF;

// Rule ClosePath
ruleClosePath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getClosePathAccess().getClosePathAction_0_0(),
						$current);
				}
			)
			otherlv_1='Z'
			{
				newLeafNode(otherlv_1, grammarAccess.getClosePathAccess().getZKeyword_0_1());
			}
		)
		    |
		otherlv_2='z'
		{
			newLeafNode(otherlv_2, grammarAccess.getClosePathAccess().getZKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
