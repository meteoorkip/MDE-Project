// automatically generated by Xtext
grammar org.xtext.svg.path.SvgPath with org.eclipse.xtext.common.Terminals

import "http://www.example.org/svg" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Path returns Path:
	path+=PathValue (path+=PathValue)*;

PathValue returns PathValue:
	AbsoluteMoveTo | RelativeMoveTo | AbsoluteLineTo | RelativeLineTo | AbsoluteHorizontalLineTo | RelativeHorizontalLineTo | AbsoluteVerticalLineTo | RelativeVerticalLineTo | AbsoluteQuadraticCurveTo | RelativeQuadraticCurveTo | AbsoluteCubicCurveTo | RelativeCubicCurveTo | AbsoluteSmoothQuadraticCurveTo | RelativeSmoothQuadraticCurveTo | AbsoluteSmoothCubicCurveTo | RelativeSmoothCubicCurveTo | ClosePath;

Number returns ecore::EBigDecimal:
	Integer (('E'|'e') Integer)? | 
	('+'|'-')? INT? '.' INT (('E'|'e') Integer)?;

Integer returns ecore::EBigInteger:
	('+'|'-')? INT;

AbsoluteMoveTo returns AbsoluteMoveTo:
	'M' x=Number ','? y=Number;

RelativeMoveTo returns RelativeMoveTo:
	'm' dx=Number ','? dy=Number;

AbsoluteLineTo returns AbsoluteLineTo:
	'L' x=Number ','? y=Number;

RelativeLineTo returns RelativeLineTo:
	'l' dx=Number ','? dy=Number;

AbsoluteHorizontalLineTo returns AbsoluteHorizontalLineTo:
	'H' x=Number;

RelativeHorizontalLineTo returns RelativeHorizontalLineTo:
	'h' dx=Number;

AbsoluteVerticalLineTo returns AbsoluteVerticalLineTo:
	'V' y=Number;

RelativeVerticalLineTo returns RelativeVerticalLineTo:
	'v' dy=Number;

AbsoluteQuadraticCurveTo returns AbsoluteQuadraticCurveTo:
	'Q' cx=Number ','? cy=Number ','? x=Number ','? y=Number;

RelativeQuadraticCurveTo returns RelativeQuadraticCurveTo:
	'q' dcx=Number ','? dcy=Number ','? dx=Number ','? dy=Number;

AbsoluteCubicCurveTo returns AbsoluteCubicCurveTo:
	'C' c1x=Number ','? c1y=Number ','? c2x=Number ','? c2y=Number ','? x=Number ','? y=Number;

RelativeCubicCurveTo returns RelativeCubicCurveTo:
	'c' dc1x=Number ','? dc1y=Number ','? dc2x=Number ','? dc2y=Number ','? dx=Number ','? dy=Number;

AbsoluteSmoothQuadraticCurveTo returns AbsoluteSmoothQuadraticCurveTo:
	'T' x=Number ','? y=Number;

RelativeSmoothQuadraticCurveTo returns RelativeSmoothQuadraticCurveTo:
	't' dx=Number ','? dy=Number;

AbsoluteSmoothCubicCurveTo returns AbsoluteSmoothCubicCurveTo:
	'S' cx=Number ','? cy=Number ','? x=Number ','? y=Number;

RelativeSmoothCubicCurveTo returns RelativeSmoothCubicCurveTo:
	's' dcx=Number ','? dcy=Number ','? dx=Number ','? dy=Number;

ClosePath returns ClosePath:
	{ClosePath}
	'Z' | 'z';